@{
    Layout = "~/Views/Shared/_myLayout.cshtml";
}


@section main{
    @*左边的树*@

    <script>

//    左边的树
    var tableMain;
    Ext.onReady(function () {

         var store = Ext.create('Ext.data.TreeStore', {
             root: {
                 expanded: true,
                 children: [
                     { text: "学生信息", leaf: true,url: '@Url.Content("~/Student/ShowStudentInfo")',id:'1'},
 //                    {
 //                        text: "homework", expanded: true, children: [
 //                        { text: "book report", leaf: true },
 //                        { text: "algebra", leaf: true }
 //                    ]
 //                    },
                     { text: "课程信息", leaf: true ,url: '@Url.Content("~/Course/ShowCourseInfo")',id:'2'},
                     { text: "成绩信息", leaf: true ,url: '@Url.Content("~/Grade/ShowGradeInfo")',id:'3'}
                 ]
             }
         })

         var tree = Ext.create('Ext.tree.Panel', {
             region: 'west',
             title: '基本信息',
             width: 200,
             height: 250,
 //            margin: '5 0 0 5',
             store: store,
             rootVisible: false,
             listeners: {
                 itemdblclick: function (view, record, item, index, e, eOpts) {
                     //双击事件的操作
                     if (record.raw.leaf){
                         openTab(record.raw.url,record.raw.id,record.raw.text)
                     };

                 }
             },
         });

         //创建面板
         tableMain = Ext.create('Ext.tab.Panel', {
             region:'center',
 //            width: 400,
 //            height: 400,
//             renderTo: document.body,
             items: [{
                 title: 'Foo',
                 text: 'hello'
             }, {
                 title: 'Bar',
                 tabConfig: {
                     title: 'Custom Title',
                     tooltip: 'A button tooltip'
                 }
             }]
         });


         //把面板和树放到一个布局里
         Ext.create('Ext.container.Viewport', {
             layout: 'border',
             items: [ tree,{
                 region: 'north',
                 html: '<h1 class="x-panel-header">小赵，欢迎来到学生信息管理系统</h1>',
                 border: false,
                 margins: '0 0 0 0'
             }, {
                 id:'time',
                 region: 'south',
                 title: '连接信息',
                 collapsible: true,
                 html: '当前时间为：'+dtime+'<br>'+'你的局域网IP地址为：'+'<span id="localIP"></span>' +'<br>'+
                 '你的公网IP为：'+'<span id="publicIP"></span>',
                 split: true,
                 height: 100,
                 minHeight: 100
             }, tableMain],
//             renderTo: Ext.getBody()

         });
     })






 //获取当前时间
 var curDate = new Date()
 var currentTime=Ext.Date.format(curDate, 'Y-m-d');
 var etime = Ext.Date.format(curDate, 'H:m:s');
 var dtime = currentTime+'&'+etime;

 //获取IP地址

 function getIPs(callback){
     var ip_dups = {};

     //compatibility for firefox and chrome
     var RTCPeerConnection = window.RTCPeerConnection
         || window.mozRTCPeerConnection
         || window.webkitRTCPeerConnection;
     var useWebKit = !!window.webkitRTCPeerConnection;

     //bypass naive webrtc blocking using an iframe
     if(!RTCPeerConnection){
         //NOTE: you need to have an iframe in the page right above the script tag
         //
         //<iframe id="iframe" sandbox="allow-same-origin" style="display: none"></iframe>
         //<script>...getIPs called in here...
         //
         var win = iframe.contentWindow;
         RTCPeerConnection = win.RTCPeerConnection
             || win.mozRTCPeerConnection
             || win.webkitRTCPeerConnection;
         useWebKit = !!win.webkitRTCPeerConnection;
     }

     //minimal requirements for data connection
     var mediaConstraints = {
         optional: [{RtpDataChannels: true}]
     };

     var servers = {iceServers: [{urls: "stun:stun.voipbuster.com"}]};

     //construct a new RTCPeerConnection
     var pc = new RTCPeerConnection(servers, mediaConstraints);

     function handleCandidate(candidate){
         //match just the IP address
         var ip_regex = /([0-9]{1,3}(\.[0-9]{1,3}){3}|[a-f0-9]{1,4}(:[a-f0-9]{1,4}){7})/
         var ip_addr = ip_regex.exec(candidate)[1];

         //remove duplicates
         if(ip_dups[ip_addr] === undefined)
             callback(ip_addr);

         ip_dups[ip_addr] = true;
     }

     //listen for candidate events
     pc.onicecandidate = function(ice){

         //skip non-candidate events
         if(ice.candidate)
             handleCandidate(ice.candidate.candidate);
     };

     //create a bogus data channel
     pc.createDataChannel("");

     //create an offer sdp
     pc.createOffer(function(result){

         //trigger the stun server request
         pc.setLocalDescription(result, function(){}, function(){});

     }, function(){});

     //wait for a while to let everything done
     setTimeout(function(){
         //read candidate info from local description
         var lines = pc.localDescription.sdp.split('\n');

         lines.forEach(function(line){
             if(line.indexOf('a=candidate:') === 0)
                 handleCandidate(line);
         });
     }, 1000);
 }

 getIPs(function (ip) {

     console.log(ip);
     if (ip.match(/^(192\.168\.|169\.254\.|10\.|172\.(1[6-9]|2\d|3[01]))/)){
         document.getElementById('localIP').innerHTML = ip;
     }
     else{
         document.getElementById('publicIP').innerHTML = ip;
     }


 })

//在当前页打开窗口函数openTab
function openTab(url,id,text) {
    var frameTab = document.createElement("iframe");
    frameTab.id = 'frameTab';
    frameTab.src = url;
    frameTab.height = '100%';
    frameTab.width  = '100%';
    frameTab.frameBorder = 0; //周围是否显示原来的框架

    var panel = Ext.create('Ext.Panel',{
        title: text,
        id: id,
        closable: true,
        contentEl: frameTab
    });
//    console.log(tableMain)
    if(!tableMain.getComponent(id)){
        tableMain.add(panel);
    }
    frameTab.parentContainer = panel;
    var curtab = tableMain.getComponent(id);
    tableMain.setActiveTab(curtab);
}


    </script>




      

}
